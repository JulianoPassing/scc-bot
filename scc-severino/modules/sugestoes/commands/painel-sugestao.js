import { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, PermissionFlagsBits } from 'discord.js';

export default {
  data: {
    name: 'painel-sugestao',
    description: 'Cria um painel de sugest√µes para o servidor',
    defaultMemberPermissions: PermissionFlagsBits.ManageMessages
  },
  
  async execute(message, args, client) {
    try {
      // Pegar a sugest√£o dos argumentos
      const sugestao = args.join(' ');
      
      if (!sugestao) {
        await message.reply('‚ùå Por favor, forne√ßa uma sugest√£o. Exemplo: `!painel-sugestao Adicionar mais canais de carros`');
        return;
      }

      const embed = new EmbedBuilder()
        .setColor(0xffff00)
        .setTitle('üí° Nova Sugest√£o')
        .setDescription(`**Sugest√£o:** ${sugestao}`)
        .addFields(
          { name: 'üìä Votos', value: 'üëç **0** | üëé **0** (Total: 0)', inline: false },
          { name: 'üìù Como votar?', value: 'Clique em üëç para concordar ou üëé para discordar da sugest√£o.', inline: false }
        )
        .setFooter({ text: 'Street Car Club ‚Ä¢ Sistema de Sugest√µes' })
        .setTimestamp();

      const buttons = new ActionRowBuilder()
        .addComponents(
          new ButtonBuilder()
            .setCustomId('vote_yes')
            .setLabel('üëç Concordo')
            .setStyle(ButtonStyle.Success),
          new ButtonBuilder()
            .setCustomId('vote_no')
            .setLabel('üëé Discordo')
            .setStyle(ButtonStyle.Danger)
        );

      await message.channel.send({
        embeds: [embed],
        components: [buttons]
      });

      // Deletar o comando original
      if (message.guild.members.me.permissions.has(PermissionFlagsBits.ManageMessages)) {
        await message.delete().catch(() => {});
      }

    } catch (error) {
      console.error('[SUGESTOES][PAINEL] Erro:', error);
      await message.reply('‚ùå Ocorreu um erro ao criar o painel de sugest√µes.');
    }
  }
}; 